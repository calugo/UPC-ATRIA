{"name":"Upc-atria","tagline":"HOME OF THE BARCELONA (UPC-DFA-EPSEB) HUMAN ATRIAL MODEL","body":"\r\n# README\r\nThis repository contains source codes to produce:\r\n  * The results of the human atrial\r\ncell model\r\nreported in the article:\r\n[*Are SR Ca content fluctuations or SR refractoriness the key to atrial cardiac\r\nalternans?: insights from a human atrial model (DOI:\r\n10.1152/ajpheart.00515.2013)*](http://ajpheart.physiology.org/content/306/11/H1540.long)\r\n\r\n  * The code to produce results in tissues by defining domains of alternating-non alternating cells and by coupling the membrane potential of each unit. Also, some scripts\r\n  for creating python movies in one and two dimensions are provided.\r\n\r\n# SINGLE CELL VERSIONS.\r\n\r\nIt is composed by four files:\r\n\r\n1. This file.\r\n2. UPCATRIALMODEL.tar.gz: C version of the program.\r\n3. A version of the gnu scientific library.\r\n4. UPCATRIALMODELF.tar.gz: Fortran version of the program.\r\n\r\n## The gnu scientific library:\r\n\r\nAn updated version of the  gsl library alongside installation instructions can\r\nbe obtained\r\nat: http://www.gnu.org/software/gsl\r\n\r\nHere it is only distributed for completeness, because the code heavily relies on\r\nthe library, so it should be installed in your system.\r\n\r\n## The C version bundle: UPCATRIALMODEL.tar.gz\r\n\r\nOnce you have extracted the files in the compressed file you will find:\r\n\r\n1. The source code itself, which is contained in the file UPCatrialCell.c\r\n1. A folder called SAMPLEOUTPUT, which contains results obtained by running the\r\ncode as it is packed in the bundle.\r\n1. A shell script in a file called 'atriacompile'\r\n\r\nThe parameters chosen to produce the sample results are:\r\n\r\n* Stimulus period Ts=400 ms.\r\n* Recovery times of 200ms (healthy cell) and 700ms for the alternating cell.\r\n\r\nAll the output files consist of three columns which correspond to time, healthy\r\ncell and\r\nalternating cell signals respectively.\r\n\r\nThe codes does not starts writin outputs until a number of iterations are first\r\ncalculated, so it only prints\r\nvalues closer or at the stationary state.\r\n\r\n### Compilation and Execution (Unix/Mac OS).\r\n\r\nThe script 'atriacompile' executes the line:\r\n\r\n`$cc -I/usr/local/include -o AtrialCell UPCatrialCell.c -L/usr/local/lib -lgsl\r\n-lgslcblas -lm`\r\n\r\nIf the installation paths of the library are different they can be found by\r\nexecuting:\r\n\r\n`$gsl-config --libs --cflags`\r\n\r\nIf the code links and compiles correctly it generates the file:  `AtrialCell`,\r\nwhich should\r\nbe run in a terminal as:\r\n\r\n`$ ./AtrialCell`\r\n\r\n## Fortran Bundle: UPCATRIALMODELF.tar.gz\r\n\r\nThis contains a fortran source `UPC-ATRIALCELL.f` and a binary file `check.dat`.\r\n\r\n### Compilation and Execution (Unix/Mac OS)\r\n\r\nTo compile the code type in UNIX/MAC OS, type in a terminal:\r\n\r\n`$gfortran -o exfilename sourcefilename.f`\r\n\r\nthen run:\r\n\r\n`$./exfilename`\r\n\r\nThe binary file  `check.dat` is read at the beginning of the execution and it\r\ncontains the initial data obtained for\r\nTs=1000 ms which are then evaluated for other pacing values (*Tsvalue*). Then,\r\nthe outcomes are written in another binary file called `output.dat.Tsvalue`.\r\n\r\nIt also writes standard text files for the time evolution of the voltage and\r\nevery Calcium concentration\r\n(`volt.dat.Tsvalue`) and a file with the action potential duration APD(DI)\r\n(`rest0dss.dat`).\r\n\r\n# TISSUE CODES AND MOVIES.\r\n\r\nThe tissues code provided is written in C only. This part of the project is contained\r\nin a folder called TISSUEMODEL.\r\nIt contains:\r\n\r\n  *  UPCatrialtissues.c\r\n  *  atriacomplie\r\n  *  anipy/Cai2d.py\r\n  *  anipy/V2d.py\r\n  *  anipy/domains.py\r\n\r\nThe first two files are the source code and the compilation script. Again it relies\r\nheavily on the GNU scientific library and it must be excecuted as:\r\n\r\n `$./atriacomiple`\r\n\r\n which executes:\r\n\r\n  `$cc -I/opt/local/include/ -o AtrialTissue UPCatrialtissues.c -L/opt/local/lib -lgsl -lgslcblas -lm -fno-stack-protector`\r\n\r\nThis creates the excecutable file AtrialTissue. The excecution of that file first runs the\r\nsingle cell version of the code for two cells, one alternating and one healthy, which states\r\nare copied into the predetermined domains established in the code (function inicond2()).\r\n\r\nThe default configuration is Lx=300 and Ly=250. and a circle centered at ix=110 and iy=74\r\nof radius Ly-20. the cellular lengths are taken to be 0.025 micrometers.\r\n\r\nThe code stores pictures of the system  at \"snaps/tnCai.dat\" and \"snaps/tnVm.dat\", so\r\nit is required to have a folder called 'snaps' in the excecution path. The code accepts\r\nrandom number seed environmental variables to create stochastic media (Some code is in\r\n    the source commented).\r\n\r\n  The python scripts read configurations from \"../snaps\" and create movies, providing\r\n  To and Tf, values for the initial and final times, this is discussed in more detail\r\n  at my [blog](http://calugo.github.io)\r\n\r\nPlease do not hesitate to contact me for assistance.\r\n\r\nCheers!.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}